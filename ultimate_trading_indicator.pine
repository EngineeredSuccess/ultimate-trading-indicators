//@version=6
indicator("Ultimate Trading System", "UTS", overlay=false, max_bars_back=1000)

// ============================================================================
// ULTIMATE TRADING SYSTEM - INTEGRATED INDICATOR
// ============================================================================
// Combines 6 proven trading methodologies into one comprehensive system:
// 1. Pi Cycle Top (Bitcoin market top detection)
// 2. SPX/Gold Ratio (Macro bubble detection)
// 3. Elliott Wave Analysis (Wave pattern recognition)
// 4. Crypto Bull Strategy (Long-term Bitcoin strategy)
// 5. Trading Parrot Analysis (Multi-source technical analysis)
// 6. Zeberg Business Cycles (Economic cycle analysis)
// ============================================================================

// INPUT PARAMETERS
// ============================================================================

// Methodology Weights
weight_pi_cycle = input.float(0.25, "Pi Cycle Top Weight", minval=0.0, maxval=1.0, step=0.05, group="Methodology Weights")
weight_spx_gold = input.float(0.20, "SPX/Gold Ratio Weight", minval=0.0, maxval=1.0, step=0.05, group="Methodology Weights")
weight_elliott = input.float(0.20, "Elliott Wave Weight", minval=0.0, maxval=1.0, step=0.05, group="Methodology Weights")
weight_crypto_bull = input.float(0.15, "Crypto Bull Strategy Weight", minval=0.0, maxval=1.0, step=0.05, group="Methodology Weights")
weight_trading_parrot = input.float(0.20, "Trading Parrot Weight", minval=0.0, maxval=1.0, step=0.05, group="Methodology Weights")

// Display Settings
show_individual = input.bool(true, "Show Individual Signals", group="Display")
show_integrated = input.bool(true, "Show Integrated Signal", group="Display")
show_table = input.bool(true, "Show Analysis Table", group="Display")
show_background = input.bool(true, "Show Background Colors", group="Display")

// Alert Settings
enable_alerts = input.bool(true, "Enable Alerts", group="Alerts")
alert_threshold_high = input.float(80, "High Alert Threshold", minval=60, maxval=100, group="Alerts")
alert_threshold_low = input.float(20, "Low Alert Threshold", minval=0, maxval=40, group="Alerts")

// External Data Sources
spx_symbol = input.symbol("SPY", "SPX Symbol", group="Data Sources")
gold_symbol = input.symbol("GLD", "Gold Symbol", group="Data Sources")
btc_dominance_symbol = input.symbol("CRYPTOCAP:BTC.D", "BTC Dominance", group="Data Sources")

// ============================================================================
// PI CYCLE TOP CALCULATION
// ============================================================================

calculate_pi_cycle_signal() =>
    var float signal = 50.0
    
    // Calculate moving averages
    ma_111 = ta.sma(close, 111)
    ma_350_x2 = ta.sma(close, 350) * 2
    
    // Distance calculation
    distance_pct = ma_350_x2 > 0 ? (ma_350_x2 - ma_111) / ma_350_x2 * 100 : 0
    
    // Signal calculation
    if ma_111 >= ma_350_x2
        // Above the line - top signal active
        excess_pct = (ma_111 - ma_350_x2) / ma_350_x2 * 100
        signal := 85 + math.min(15, excess_pct * 3)
    else
        // Below the line - calculate proximity
        proximity = math.max(0, 100 - distance_pct * 10)
        signal := proximity * 0.8
    
    signal

// ============================================================================
// SPX/GOLD RATIO CALCULATION
// ============================================================================

calculate_spx_gold_signal() =>
    var float signal = 50.0
    
    // Get external data
    spx_price = request.security(spx_symbol, timeframe.period, close)
    gold_price = request.security(gold_symbol, timeframe.period, close)
    
    // Calculate ratio
    spx_gold_ratio = gold_price > 0 ? spx_price / gold_price : na
    
    if not na(spx_gold_ratio)
        // Bubble thresholds
        bubble_warning = 2.0
        bubble_danger = 2.3
        bubble_extreme = 2.6
        
        // Signal calculation
        if spx_gold_ratio >= bubble_extreme
            signal := 95 + math.min(5, (spx_gold_ratio - bubble_extreme) / bubble_extreme * 20)
        else if spx_gold_ratio >= bubble_danger
            signal := 80 + ((spx_gold_ratio - bubble_danger) / (bubble_extreme - bubble_danger)) * 15
        else if spx_gold_ratio >= bubble_warning
            signal := 60 + ((spx_gold_ratio - bubble_warning) / (bubble_danger - bubble_warning)) * 20
        else if spx_gold_ratio >= bubble_warning * 0.8
            signal := 40 + ((spx_gold_ratio - bubble_warning * 0.8) / (bubble_warning * 0.2)) * 20
        else
            signal := math.max(0, (spx_gold_ratio / (bubble_warning * 0.8)) * 40)
    
    signal

// ============================================================================
// ELLIOTT WAVE CALCULATION
// ============================================================================

calculate_elliott_wave_signal() =>
    var float signal = 50.0
    
    // Price momentum analysis
    momentum_short = ta.mom(close, 10)
    momentum_medium = ta.mom(close, 25)
    momentum_long = ta.mom(close, 50)
    
    // RSI for momentum confirmation
    rsi_wave = ta.rsi(close, 14)
    
    // Volume analysis
    volume_ma = ta.sma(volume, 20)
    volume_ratio = volume > 0 and volume_ma > 0 ? volume / volume_ma : 1.0
    
    // Wave analysis based on momentum patterns
    if momentum_long > 0 and momentum_medium > 0 and momentum_short < 0
        signal := 70 // Potential Wave 5 top
    else if rsi_wave > 70 and volume_ratio < 0.8
        signal := 75 // Overbought with weak volume
    else if momentum_long < 0 and momentum_medium < 0
        signal := 35 // Corrective phase
    else if rsi_wave < 30 and volume_ratio > 1.5
        signal := 25 // Oversold with strong volume
    else
        signal := 50 // Neutral
    
    signal

// ============================================================================
// CRYPTO BULL STRATEGY CALCULATION
// ============================================================================

calculate_crypto_bull_signal() =>
    var float signal = 50.0
    
    // 50-week SMA (350 days)
    sma_50w = ta.sma(close, 350)
    
    // Progress toward targets
    btc_target_2026 = 200000
    progress_2026 = (close / btc_target_2026) * 100
    
    // Bull market phase detection
    if close > sma_50w
        // Bullish signal, but adjust based on progress
        base_bullish = 30
        progress_penalty = (progress_2026 / 100) * 40
        signal := base_bullish + progress_penalty
    else
        // Below 50-week SMA - bearish
        distance_below = (sma_50w - close) / sma_50w * 100
        signal := 60 + math.min(30, distance_below * 2)
    
    signal

// ============================================================================
// TRADING PARROT ANALYSIS CALCULATION
// ============================================================================

calculate_trading_parrot_signal() =>
    var float signal = 50.0
    
    // Custom RSI analysis
    rsi_standard = ta.rsi(close, 14)
    
    // Volume analysis
    volume_ma = ta.sma(volume, 20)
    volume_ratio = volume > 0 and volume_ma > 0 ? volume / volume_ma : 1.0
    
    // Liquidity analysis (simplified)
    highest_recent = ta.highest(high, 100)
    lowest_recent = ta.lowest(low, 100)
    price_position = (close - lowest_recent) / (highest_recent - lowest_recent)
    
    // SOPR proxy analysis
    long_ma = ta.sma(close, 100)
    sopr_proxy = close / long_ma
    
    // Combine signals
    rsi_signal = rsi_standard > 70 ? 80 : rsi_standard < 30 ? 20 : 50
    volume_signal = volume_ratio > 2.0 ? 60 : volume_ratio < 0.5 ? 40 : 50
    liquidity_signal = price_position * 100
    sopr_signal = sopr_proxy > 1.15 ? 85 : sopr_proxy < 0.95 ? 25 : 50
    
    // Weighted combination
    signal := (rsi_signal * 0.3 + volume_signal * 0.2 + liquidity_signal * 0.25 + sopr_signal * 0.25)
    
    signal

// ============================================================================
// SIGNAL CALCULATIONS
// ============================================================================

// Calculate individual methodology signals
pi_cycle_signal = calculate_pi_cycle_signal()
spx_gold_signal = calculate_spx_gold_signal()
elliott_signal = calculate_elliott_wave_signal()
crypto_bull_signal = calculate_crypto_bull_signal()
trading_parrot_signal = calculate_trading_parrot_signal()

// Calculate integrated signal
total_weight = weight_pi_cycle + weight_spx_gold + weight_elliott + weight_crypto_bull + weight_trading_parrot
integrated_signal = total_weight > 0 ? 
    (pi_cycle_signal * weight_pi_cycle + 
     spx_gold_signal * weight_spx_gold + 
     elliott_signal * weight_elliott + 
     crypto_bull_signal * weight_crypto_bull + 
     trading_parrot_signal * weight_trading_parrot) / total_weight : 50.0

// ============================================================================
// VISUALIZATION
// ============================================================================

// Plot individual signals
plot(show_individual ? pi_cycle_signal : na, "Pi Cycle", color.red, 1)
plot(show_individual ? spx_gold_signal : na, "SPX/Gold", color.orange, 1)
plot(show_individual ? elliott_signal : na, "Elliott Wave", color.blue, 1)
plot(show_individual ? crypto_bull_signal : na, "Crypto Bull", color.green, 1)
plot(show_individual ? trading_parrot_signal : na, "Trading Parrot", color.purple, 1)

// Plot integrated signal
plot(show_integrated ? integrated_signal : na, "Integrated Signal", color.white, 3)

// Reference lines
hline(80, "Strong Sell", color.red, linestyle=hline.style_dashed)
hline(60, "Sell", color.orange, linestyle=hline.style_dotted)
hline(50, "Neutral", color.gray, linestyle=hline.style_solid)
hline(40, "Buy", color.lime, linestyle=hline.style_dotted)
hline(20, "Strong Buy", color.green, linestyle=hline.style_dashed)

// Background coloring
bgcolor(show_background and integrated_signal > 80 ? color.new(color.red, 90) : 
        show_background and integrated_signal > 60 ? color.new(color.orange, 90) : 
        show_background and integrated_signal < 20 ? color.new(color.green, 90) : 
        show_background and integrated_signal < 40 ? color.new(color.lime, 90) : na)

// ============================================================================
// INFORMATION TABLE
// ============================================================================

if show_table and barstate.islast
    var table info_table = table.new(position.top_right, 3, 8, bgcolor=color.white, border_width=1)
    
    table.cell(info_table, 0, 0, "Ultimate Trading System", text_color=color.white, bgcolor=color.blue)
    table.cell(info_table, 1, 0, "Signal", text_color=color.white, bgcolor=color.blue)
    table.cell(info_table, 2, 0, "Status", text_color=color.white, bgcolor=color.blue)
    
    // Pi Cycle Top
    pi_status = pi_cycle_signal > 80 ? "TOP" : pi_cycle_signal < 30 ? "SAFE" : "MONITOR"
    pi_color = pi_cycle_signal > 80 ? color.red : pi_cycle_signal < 30 ? color.green : color.gray
    table.cell(info_table, 0, 1, "Pi Cycle", text_color=color.black)
    table.cell(info_table, 1, 1, str.tostring(math.round(pi_cycle_signal, 1)), text_color=color.black)
    table.cell(info_table, 2, 1, pi_status, text_color=color.white, bgcolor=pi_color)
    
    // SPX/Gold Ratio
    spx_status = spx_gold_signal > 80 ? "BUBBLE" : spx_gold_signal < 40 ? "NORMAL" : "ELEVATED"
    spx_color = spx_gold_signal > 80 ? color.red : spx_gold_signal < 40 ? color.green : color.orange
    table.cell(info_table, 0, 2, "SPX/Gold", text_color=color.black)
    table.cell(info_table, 1, 2, str.tostring(math.round(spx_gold_signal, 1)), text_color=color.black)
    table.cell(info_table, 2, 2, spx_status, text_color=color.white, bgcolor=spx_color)
    
    // Elliott Wave
    ew_status = elliott_signal > 70 ? "WAVE 5" : elliott_signal < 35 ? "WAVE 2/4" : "NEUTRAL"
    ew_color = elliott_signal > 70 ? color.red : elliott_signal < 35 ? color.green : color.gray
    table.cell(info_table, 0, 3, "Elliott Wave", text_color=color.black)
    table.cell(info_table, 1, 3, str.tostring(math.round(elliott_signal, 1)), text_color=color.black)
    table.cell(info_table, 2, 3, ew_status, text_color=color.white, bgcolor=ew_color)
    
    // Crypto Bull Strategy
    bull_status = crypto_bull_signal < 40 ? "BULL" : crypto_bull_signal > 60 ? "BEAR" : "NEUTRAL"
    bull_color = crypto_bull_signal < 40 ? color.green : crypto_bull_signal > 60 ? color.red : color.gray
    table.cell(info_table, 0, 4, "Crypto Bull", text_color=color.black)
    table.cell(info_table, 1, 4, str.tostring(math.round(crypto_bull_signal, 1)), text_color=color.black)
    table.cell(info_table, 2, 4, bull_status, text_color=color.white, bgcolor=bull_color)
    
    // Trading Parrot
    tp_status = trading_parrot_signal > 70 ? "SELL" : trading_parrot_signal < 30 ? "BUY" : "HOLD"
    tp_color = trading_parrot_signal > 70 ? color.red : trading_parrot_signal < 30 ? color.green : color.gray
    table.cell(info_table, 0, 5, "Trading Parrot", text_color=color.black)
    table.cell(info_table, 1, 5, str.tostring(math.round(trading_parrot_signal, 1)), text_color=color.black)
    table.cell(info_table, 2, 5, tp_status, text_color=color.white, bgcolor=tp_color)
    
    // Integrated Signal
    int_status = integrated_signal > 80 ? "STRONG SELL" : integrated_signal > 60 ? "SELL" : integrated_signal < 20 ? "STRONG BUY" : integrated_signal < 40 ? "BUY" : "HOLD"
    int_color = integrated_signal > 80 ? color.red : integrated_signal > 60 ? color.orange : integrated_signal < 20 ? color.green : integrated_signal < 40 ? color.lime : color.gray
    table.cell(info_table, 0, 6, "INTEGRATED", text_color=color.white, bgcolor=color.black)
    table.cell(info_table, 1, 6, str.tostring(math.round(integrated_signal, 1)), text_color=color.white, bgcolor=color.black)
    table.cell(info_table, 2, 6, int_status, text_color=color.white, bgcolor=int_color)
    
    // Current Price
    table.cell(info_table, 0, 7, "Price", text_color=color.black)
    table.cell(info_table, 1, 7, "$" + str.tostring(close, "#,###"), text_color=color.black)
    table.cell(info_table, 2, 7, "BTC/USD", text_color=color.black)

// ============================================================================
// METHODOLOGY SUMMARY TABLE
// ============================================================================

if show_table and barstate.islast
    var table method_table = table.new(position.bottom_right, 2, 7, bgcolor=color.new(color.blue, 80), border_width=1)
    
    table.cell(method_table, 0, 0, "Methodology", text_color=color.white, bgcolor=color.blue)
    table.cell(method_table, 1, 0, "Weight", text_color=color.white, bgcolor=color.blue)
    
    table.cell(method_table, 0, 1, "Pi Cycle Top", text_color=color.white)
    table.cell(method_table, 1, 1, str.tostring(weight_pi_cycle * 100, "#") + "%", text_color=color.white)
    
    table.cell(method_table, 0, 2, "SPX/Gold Ratio", text_color=color.white)
    table.cell(method_table, 1, 2, str.tostring(weight_spx_gold * 100, "#") + "%", text_color=color.white)
    
    table.cell(method_table, 0, 3, "Elliott Wave", text_color=color.white)
    table.cell(method_table, 1, 3, str.tostring(weight_elliott * 100, "#") + "%", text_color=color.white)
    
    table.cell(method_table, 0, 4, "Crypto Bull", text_color=color.white)
    table.cell(method_table, 1, 4, str.tostring(weight_crypto_bull * 100, "#") + "%", text_color=color.white)
    
    table.cell(method_table, 0, 5, "Trading Parrot", text_color=color.white)
    table.cell(method_table, 1, 5, str.tostring(weight_trading_parrot * 100, "#") + "%", text_color=color.white)
    
    table.cell(method_table, 0, 6, "Total Weight", text_color=color.white, bgcolor=color.black)
    table.cell(method_table, 1, 6, str.tostring(total_weight * 100, "#") + "%", text_color=color.white, bgcolor=color.black)

// ============================================================================
// ALERTS
// ============================================================================

if enable_alerts
    // Strong sell alert
    if integrated_signal > alert_threshold_high and integrated_signal[1] <= alert_threshold_high
        alert("🚨 ULTIMATE TRADING SYSTEM: STRONG SELL SIGNAL! Integrated signal: " + str.tostring(integrated_signal, "#.#") + 
              "/100. Multiple methodologies indicating high risk. Price: $" + str.tostring(close, "#,###"), alert.freq_once_per_bar)
    
    // Strong buy alert
    if integrated_signal < alert_threshold_low and integrated_signal[1] >= alert_threshold_low
        alert("🟢 ULTIMATE TRADING SYSTEM: STRONG BUY SIGNAL! Integrated signal: " + str.tostring(integrated_signal, "#.#") + 
              "/100. Multiple methodologies indicating opportunity. Price: $" + str.tostring(close, "#,###"), alert.freq_once_per_bar)
    
    // Pi Cycle specific alert
    if pi_cycle_signal > 90 and pi_cycle_signal[1] <= 90
        alert("🔴 PI CYCLE TOP ALERT! Signal: " + str.tostring(pi_cycle_signal, "#.#") + 
              ". Historical top indicator activated at $" + str.tostring(close, "#,###"), alert.freq_once_per_bar)
    
    // SPX/Gold bubble alert
    if spx_gold_signal > 90 and spx_gold_signal[1] <= 90
        alert("💥 BUBBLE ALERT! SPX/Gold ratio in extreme territory. Signal: " + str.tostring(spx_gold_signal, "#.#") + 
              ". Historical bubble levels detected!", alert.freq_once_per_bar)

// ============================================================================
// SIGNAL STRENGTH INDICATOR
// ============================================================================

// Add signal strength visualization
signal_strength = math.abs(integrated_signal - 50) * 2 // Convert to 0-100 scale
strength_color = signal_strength > 80 ? color.red : signal_strength > 60 ? color.orange : signal_strength > 40 ? color.yellow : color.green

plot(signal_strength, "Signal Strength", strength_color, 2, display=display.none)

// ============================================================================
// END OF ULTIMATE TRADING SYSTEM INDICATOR
// ============================================================================

